ARG PYTHON_VERSION=3.11.7
ARG DEBIAN_BASE=bookworm
FROM python:${PYTHON_VERSION}-slim-${DEBIAN_BASE} AS base

# Add security headers
ENV PYTHONWARNINGS="ignore:Unverified HTTPS request"
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1
ENV DEBIAN_FRONTEND=noninteractive

# Add security scanning during build
RUN apt-get update \
    && apt-get install --no-install-recommends -y \
    ca-certificates=20230311 \
    && update-ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && pip install --no-cache-dir pip==23.3.2 setuptools==69.0.3 wheel==0.42.0

ARG WKHTMLTOPDF_VERSION=0.12.6.1-3
ARG WKHTMLTOPDF_DISTRO=bookworm
ARG NODE_VERSION=18.19.0
ENV NVM_DIR=/home/frappe/.nvm
ENV PATH=${NVM_DIR}/versions/node/v${NODE_VERSION}/bin/:${PATH}
ENV FRAPPE_TUNE_GC=True

RUN useradd -ms /bin/bash frappe \
    && apt-get update \
    && apt-get install --no-install-recommends -y \
    curl=7.88.1-10+deb12u5 \
    git=1:2.39.2-1.1 \
    vim=2:9.0.1378-2 \
    nginx=1.22.1-9 \
    gettext-base=0.21-12 \
    file=1:5.44-3 \
    # weasyprint dependencies
    libpango-1.0-0=1.50.12-1 \
    libharfbuzz0b=6.0.0-1 \
    libpangoft2-1.0-0=1.50.12-1 \
    libpangocairo-1.0-0=1.50.12-1 \
    # For backups
    restic=0.15.1-1 \
    gpg=2.2.40-1.1 \
    # MariaDB
    mariadb-client=1:10.11.6-0+deb12u1 \
    less=590-2 \
    # Postgres
    libpq-dev=15.5-0+deb12u1 \
    postgresql-client=15+248 \
    # For healthcheck
    wait-for-it=0.0~git20180723-1.1 \
    jq=1.6-2.1 \
    && mkdir -p ${NVM_DIR} \
    && curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash \
    && . ${NVM_DIR}/nvm.sh \
    && nvm install ${NODE_VERSION} \
    && nvm use v${NODE_VERSION} \
    && npm install -g yarn@1.22.21 \
    && nvm alias default v${NODE_VERSION} \
    && rm -rf ${NVM_DIR}/.cache \
    && echo 'export NVM_DIR="/home/frappe/.nvm"' >>/home/frappe/.bashrc \
    && echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm' >>/home/frappe/.bashrc \
    && echo '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion' >>/home/frappe/.bashrc \
    # Install wkhtmltopdf with patched qt
    && if [ "$(uname -m)" = "aarch64" ]; then export ARCH=arm64; fi \
    && if [ "$(uname -m)" = "x86_64" ]; then export ARCH=amd64; fi \
    && downloaded_file=wkhtmltox_${WKHTMLTOPDF_VERSION}.${WKHTMLTOPDF_DISTRO}_${ARCH}.deb \
    && curl -sLO https://github.com/wkhtmltopdf/packaging/releases/download/$WKHTMLTOPDF_VERSION/$downloaded_file \
    && apt-get install -y ./$downloaded_file \
    && rm $downloaded_file \
    # Clean up
    && rm -rf /var/lib/apt/lists/* \
    && rm -fr /etc/nginx/sites-enabled/default \
    && pip3 install --no-cache-dir frappe-bench \
    # Fixes for non-root nginx and logs to stdout
    && sed -i '/user www-data/d' /etc/nginx/nginx.conf \
    && ln -sf /dev/stdout /var/log/nginx/access.log && ln -sf /dev/stderr /var/log/nginx/error.log \
    && touch /run/nginx.pid \
    && chown -R frappe:frappe /etc/nginx/conf.d \
    && chown -R frappe:frappe /etc/nginx/nginx.conf \
    && chown -R frappe:frappe /var/log/nginx \
    && chown -R frappe:frappe /var/lib/nginx \
    && chown -R frappe:frappe /run/nginx.pid

COPY resources/nginx-template.conf /templates/nginx/frappe.conf.template
COPY resources/nginx-entrypoint.sh /usr/local/bin/nginx-entrypoint.sh

FROM base AS build

RUN apt-get update \
    && DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
    # For frappe framework
    wget=1.21.3-1+b1 \
    # For psycopg2
    libpq-dev=15.5-0+deb12u1 \
    # Other
    libffi-dev=3.4.4-1 \
    liblcms2-dev=2.14-2 \
    libldap2-dev=2.5.13+dfsg-5 \
    libmariadb-dev=1:10.11.6-0+deb12u1 \
    libsasl2-dev=2.1.28+dfsg-10 \
    libtiff5-dev=4.5.1+git230720-1 \
    libwebp-dev=1.3.1-1 \
    redis-tools=6:7.0.11-1 \
    rlwrap=0.45.2-3 \
    tk8.6-dev=8.6.13-2 \
    cron=3.0pl1-162 \
    # For pandas
    gcc=4:12.2.0-3 \
    build-essential=12.9 \
    libbz2-dev=1.0.8-5+b1 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

USER frappe

FROM build AS builder

# Add security headers for npm
ENV NPM_CONFIG_AUDIT=true
ENV NPM_CONFIG_AUDIT_LEVEL=high
ENV NPM_CONFIG_FUND=false
ENV NPM_CONFIG_STRICT_SSL=true

ARG FRAPPE_BRANCH=develop
ARG FRAPPE_PATH=https://github.com/metalmon/frappe.git
ARG ERPNEXT_REPO=https://github.com/metalmon/erpnext.git
ARG ERPNEXT_BRANCH=develop

# Combine multiple RUN commands to reduce layers and improve security
RUN set -ex \
    && bench init \
       --frappe-branch=${FRAPPE_BRANCH} \
       --frappe-path=${FRAPPE_PATH} \
       --no-procfile \
       --no-backups \
       --skip-redis-config-generation \
       --verbose \
       /home/frappe/frappe-bench \
    && cd /home/frappe/frappe-bench/apps/frappe \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench get-app ${ERPNEXT_REPO} --branch ${ERPNEXT_BRANCH} --resolve-deps \
    && cd /home/frappe/frappe-bench/apps/erpnext \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build \
    && bench get-app --branch develop https://github.com/metalmon/hrms.git \
    && cd /home/frappe/frappe-bench/apps/hrms \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app hrms \
    && bench get-app --branch=develop https://github.com/metalmon/crm.git \
    && cd /home/frappe/frappe-bench/apps/crm \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app crm \
    && bench get-app --branch=main https://github.com/metalmon/raven.git \
    && cd /home/frappe/frappe-bench/apps/raven \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app raven \
    && bench get-app --branch=main https://github.com/metalmon/gameplan.git \
    && cd /home/frappe/frappe-bench/apps/gameplan \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app gameplan \
    && bench get-app --branch=develop https://github.com/metalmon/builder.git \
    && cd /home/frappe/frappe-bench/apps/builder \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app builder \
    && bench get-app --branch=develop https://github.com/metalmon/lms.git \
    && cd /home/frappe/frappe-bench/apps/lms \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app lms \
    && bench get-app --branch=develop https://github.com/metalmon/drive.git \
    && cd /home/frappe/frappe-bench/apps/drive \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app drive \
    && bench get-app --branch=develop https://github.com/metalmon/insights.git \
    && cd /home/frappe/frappe-bench/apps/insights \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app insights \
    && bench get-app --branch=develop https://github.com/metalmon/helpdesk.git \
    && cd /home/frappe/frappe-bench/apps/helpdesk \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app helpdesk \
    && bench get-app --branch=master https://github.com/metalmon/wiki.git \
    && cd /home/frappe/frappe-bench/apps/wiki \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app wiki \
    && bench get-app --branch=develop https://github.com/metalmon/print_designer.git \
    && cd /home/frappe/frappe-bench/apps/print_designer \
    && npx update-browserslist-db@latest \
    && cd /home/frappe/frappe-bench \
    && bench build --app print_designer \
    && bench get-app --branch=develop https://github.com/metalmon/webshop.git \
    && cd /home/frappe/frappe-bench/apps/webshop \
    && bench get-app --branch=master https://github.com/metalmon/frappe_whatsapp.git \
    && cd /home/frappe/frappe-bench/apps/frappe_whatsapp \
    && bench get-app --branch=develop https://github.com/metalmon/dfp_external_storage.git \
    && cd /home/frappe/frappe-bench/apps/dfp_external_storage \
    && bench get-app --branch=develop https://github.com/metalmon/whitelabel.git \
    && cd /home/frappe/frappe-bench/apps/whitelabel \
    && bench get-app --branch=master https://github.com/metalmon/frappe_telegram.git \
    && cd /home/frappe/frappe-bench/apps/frappe_telegram \
    && bench get-app --branch=develop https://github.com/metalmon/event_streaming.git \
    && cd /home/frappe/frappe-bench/apps/event_streaming \
    && bench get-app --branch=develop https://github.com/metalmon/payments.git \
    && cd /home/frappe/frappe-bench/apps/payments \
    && cd /home/frappe/frappe-bench \
    && bench setup requirements \
    && echo "{}" > sites/common_site_config.json \
    && find apps -mindepth 1 -path "*/.git" | xargs rm -fr

FROM base AS erpnext

# Add security headers
ENV PYTHONWARNINGS="ignore:Unverified HTTPS request"
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PIP_NO_CACHE_DIR=1
ENV NODE_ENV=production
ENV NPM_CONFIG_AUDIT=true
ENV NPM_CONFIG_AUDIT_LEVEL=high
ENV NPM_CONFIG_FUND=false
ENV NPM_CONFIG_STRICT_SSL=true

USER frappe

RUN echo "echo \"Commands restricted in production container, Read FAQ before you proceed: https://frappe.fyi/ctr-faq\"" >> ~/.bashrc

COPY --from=builder --chown=frappe:frappe /home/frappe/frappe-bench /home/frappe/frappe-bench

WORKDIR /home/frappe/frappe-bench

# Add Content-Security-Policy header (not present in template)
RUN mkdir -p /etc/nginx/conf.d && \
    echo "# Additional security header" > /etc/nginx/conf.d/security-headers.conf && \
    echo "add_header Content-Security-Policy \"default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: *; frame-ancestors 'self';\" always;" >> /etc/nginx/conf.d/security-headers.conf

VOLUME [ \
  "/home/frappe/frappe-bench/sites", \
  "/home/frappe/frappe-bench/sites/assets", \
  "/home/frappe/frappe-bench/logs" \
]

CMD [ \
  "/home/frappe/frappe-bench/env/bin/gunicorn", \
  "--chdir=/home/frappe/frappe-bench/sites", \
  "--bind=0.0.0.0:8000", \
  "--threads=4", \
  "--workers=2", \
  "--worker-class=gthread", \
  "--worker-tmp-dir=/dev/shm", \
  "--timeout=120", \
  "--preload", \
  "--capture-output", \
  "--enable-stdio-inheritance", \
  "--access-logfile=-", \
  "--error-logfile=-", \
  "frappe.app:application" \
]
