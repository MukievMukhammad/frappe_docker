name: Production Build and Security Scan

on:
  push:
    branches:
      - main
    paths:
      - 'images/production/**'
      - '.github/workflows/production_build.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'images/production/**'
      - '.github/workflows/production_build.yml'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          docker system prune -af

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --allow-insecure-entitlement network.host

      - name: Login to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: images/production/Containerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: metalmon/frappe:latest
          cache-from: type=gha,scope=${{ github.workflow }}
          cache-to: type=gha,mode=min,scope=${{ github.workflow }}
          build-args: |
            BUILDKIT_STEP_TIMEOUT=1200
          platforms: linux/amd64
          allow: network.host
          provenance: false

  security:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'metalmon/frappe:latest'
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '10m'
          scanners: 'vuln,secret'
          skip-files: '**/*discovery_cache/**'

      - name: Clear previous SARIF results
        run: |
          curl -X DELETE \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/code-scanning/analyses"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
