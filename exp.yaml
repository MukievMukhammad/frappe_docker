services:
  backend:
    depends_on:
      configurator:
        condition: service_completed_successfully
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  configurator:
    command:
    - |
      ls -1 apps > sites/apps.txt; bench set-config -g db_host $$DB_HOST; bench set-config -gp db_port $$DB_PORT; bench set-config -g redis_cache "redis://$$REDIS_CACHE"; bench set-config -g redis_queue "redis://$$REDIS_QUEUE"; bench set-config -g redis_socketio "redis://$$REDIS_QUEUE"; bench set-config -gp socketio_port $$SOCKETIO_PORT;
    depends_on:
      redis-cache:
        condition: service_started
      redis-queue:
        condition: service_started
    entrypoint:
    - bash
    - -c
    environment:
      DB_HOST: mariadb-database
      DB_PORT: "3306"
      REDIS_CACHE: redis-cache:6379
      REDIS_QUEUE: redis-queue:6379
      SOCKETIO_PORT: "9000"
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  frontend:
    command:
    - nginx-entrypoint.sh
    depends_on:
      backend:
        condition: service_started
      websocket:
        condition: service_started
    environment:
      BACKEND: backend:8000
      CLIENT_MAX_BODY_SIZE: 50m
      FRAPPE_SITE_NAME_HEADER: $$host
      PROXY_READ_TIMEOUT: "120"
      SOCKETIO: websocket:9000
      UPSTREAM_REAL_IP_ADDRESS: 127.0.0.1
      UPSTREAM_REAL_IP_HEADER: X-Forwarded-For
      UPSTREAM_REAL_IP_RECURSIVE: "off"
    image: metalmon/frappe:latest
    labels:
      traefik.docker.network: traefik-public
      traefik.enable: "true"
      traefik.http.routers.exp-http.entrypoints: http
      traefik.http.routers.exp-http.middlewares: https-redirect
      traefik.http.routers.exp-http.rule: Host(`vatan.exp-verse.com`,`tatkardan.exp-verse.com`,`exp-verse.com`,`demo.frappecrm.ru`,`terra.frappecrm.ru`,`docs.frappecrm.ru`)
      traefik.http.routers.exp-http.service: exp
      traefik.http.routers.exp-https.entrypoints: https
      traefik.http.routers.exp-https.rule: Host(`vatan.exp-verse.com`,`tatkardan.exp-verse.com`,`exp-verse.com`,`demo.frappecrm.ru`,`terra.frappecrm.ru`,`docs.frappecrm.ru`)
      traefik.http.routers.exp-https.service: exp
      traefik.http.routers.exp-https.tls: "true"
      traefik.http.routers.exp-https.tls.certresolver: le
      traefik.http.services.exp.loadbalancer.server.port: "8080"
    networks:
      bench-network: null
      traefik-public: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  queue-long:
    command:
    - bench
    - worker
    - --queue
    - long,default,short
    depends_on:
      configurator:
        condition: service_completed_successfully
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  queue-short:
    command:
    - bench
    - worker
    - --queue
    - short,default
    depends_on:
      configurator:
        condition: service_completed_successfully
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  redis-cache:
    image: redis:6.2-alpine
    command: ["redis-server", "/etc/redis.conf"]
    networks:
      bench-network: null
      mariadb-network: null
    volumes:
    - type: volume
      source: redis-cache-data
      target: /data
      volume: {}
    - type: bind
      source: /etc/redis.conf
      target: /etc/redis.conf
      read_only: true
  redis-queue:
    image: redis:6.2-alpine
    command: ["redis-server", "/etc/redis.conf"]
    networks:
      bench-network: null
      mariadb-network: null
    volumes:
    - type: volume
      source: redis-queue-data
      target: /data
      volume: {}
    - type: bind
      source: /etc/redis.conf
      target: /etc/redis.conf
      read_only: true
  scheduler:
    command:
    - bench
    - schedule
    depends_on:
      configurator:
        condition: service_completed_successfully
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
  websocket:
    command:
    - node
    - /home/frappe/frappe-bench/apps/frappe/socketio.js
    depends_on:
      configurator:
        condition: service_completed_successfully
    image: metalmon/frappe:latest
    networks:
      bench-network: null
      mariadb-network: null
    platform: linux/amd64
    pull_policy: always
    volumes:
    - type: volume
      source: sites
      target: /home/frappe/frappe-bench/sites
      volume: {}
networks:
  bench-network:
    name: exp
  mariadb-network:
    name: mariadb-network
    external: true
  traefik-public:
    name: traefik-public
    external: true
volumes:
  redis-cache-data:
    name: exp_redis-cache-data
    external: false
  redis-queue-data:
    name: exp_redis-queue-data
    external: false
  sites:
    name: exp_sites
    external: true
x-backend-defaults:
  depends_on:
    configurator:
      condition: service_completed_successfully
  image: metalmon/frappe:latest
  pull_policy: always
  volumes:
  - sites:/home/frappe/frappe-bench/sites
x-customizable-image:
  image: metalmon/frappe:latest
  pull_policy: always
x-depends-on-configurator:
  depends_on:
    configurator:
      condition: service_completed_successfully
